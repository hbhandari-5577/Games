#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<conio.h>
int dice;
int checkposition();
int position,newposition,above;
int choice,count=0;

int main() 
{
    srand(time(NULL));
    printf("Welcome to Snake and Ladders game.\n\n ");
    printf("Press 1 to Start.\n\n ");
    scanf("%d",&choice);
    
    if(choice==1)
    {
        printf("\n| 100 99 98 97 96 95 94 93 92 91 |    1=Start           3=Ladder to 21\n");
        printf("| 81  82 83 84 85 86 87 88 89 90 |    8=Ladder to 30    17=Snake to 12\n");
        printf("| 80  79 78 77 76 75 74 73 72 71 |    28=Ladder to 84   52=Snake to 29\n");
        printf("| 61  62 63 64 65 66 67 68 69 70 |    90=Ladder to 91   88=Snake to 18\n");
        printf("| 60  59 58 57 56 55 54 53 52 51 |    75=Ladder to 86   62=Snake to 22\n");
        printf("| 41  42 43 44 45 46 47 48 49 50 |    58=Ladder to 77    57=Snake to 40\n");
        printf("| 40  39 38 37 36 35 34 33 32 31 |    89=Ladder to 99   68=Snake to 25\n");
        printf("| 21  22 23 24 25 26 27 28 29 30 |    95=Snake to 75\n");
        printf("| 20  19 18 17 16 15 14 13 12 11 |    100=End\n");
        printf("| 1   2  3  4  5  6  7  8  9  10 |   ");
        printf("***WINNER WILL BE THE ONE WHO REACHES 100 FIRST***\n");
        do{
        printf("\n\n Press enter to roll the dice\n\n");
        dice-=(getch());
        dice=((rand()%6)+1);
        printf("You rolled the dice");
        position+=dice;
        if(dice==6)
        {
            printf("\n 6 came on the dice so throw the dice again");
            continue;
        }
        printf("\nYou landed on number %d\n",position); 
        
        checkposition();
        position=newposition;
        }while(position<100);
        printf("\n\nCONGRATULATION YOU HAVE WON THE GAME\n");
    }
    getch();
    return 0;
}

int checkposition()
{
    switch(position)
    {
        case 3:
        newposition=21;
        printf ("\n Well done you have landed on a ladder,You are now on space %d\n",newposition);
        break;
        
        case 8:
        newposition=30;
        printf ("\n Well done you have landed on a ladder,You are now on space %d\n",newposition);
        break;
        
        case 17:
        newposition=12;
        printf ("\n OOPs!! you landed on a snake,You are now on space %d\n",newposition);
        break;
        
        case 28:
        newposition=84;
        printf ("\n Well done you have landed on a ladder,You are now on space %d\n",newposition);
        break;
        
        case 52:
        newposition=29;
        printf ("\n OOPs!! you landed on a snake,You are now on space %d\n",newposition);
        break;
        
        case 90:
        newposition=91;
        printf ("\n Well done you have landed on a ladder,You are now on space %d\n",newposition);
        break;
        
        case 88:
        newposition=18;
        printf ("\n OOPs!! you landed on a snake,You are now on space %d\n",newposition);
        break;
        
        case 75:
        newposition=86;
        printf ("\n Well done you have landed on a ladder,You are now on space %d\n",newposition);
        break;
        
        case 62:
        newposition=22;
        printf ("\n Well done you have landed on a ladder,You are now on space %d\n",newposition);
        break;
        
        case 58:
        newposition=77;
        printf ("\n OOPs!! you landed on a snake,You are now on space %d\n",newposition);
        break;
        
        case 57:
        newposition=40;
        printf ("\n OOPs!! you landed on a snake,You are now on space %d\n",newposition);
        break;
        
        case 89:
        newposition=99;
        printf ("\n Well done you have landed on a ladder,You are now on space %d\n",newposition);
        break;
        
        case 68:
        newposition=25;
        printf ("\n OOPs!! you landed on a snake,You are now on space %d\n",newposition);
        break;
        
        case 95:
        newposition=75;
        printf ("\n OOPs!! you landed on a snake,You are now on space %d\n",newposition);
        break;
        
        default:
        return newposition=position;
    }
}
